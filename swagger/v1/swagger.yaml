---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/v1/users":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      first_name:
                        type: string
                      last_name:
                        type: string
                      email:
                        type: string
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                  required:
                  - first_name
                  - last_name
                  - email
                  - password
                  - password_confirmation
  "/v1/users{id}":
    get:
      summary: retrieves a user
      tags:
      - Users by id
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: name found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  first_name:
                    type: string
                  calendars:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      wake_hour:
                        type: float
                      sleep_hour:
                        type: float
                      tasks:
                        type: object
                        properties:
                          name:
                            type: string
                          desc:
                            type: string
                          start:
                            type: float
                          end:
                            type: float
                required:
                - id
        '404':
          description: User not found
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
